import pygame
import sys

# Initialize Pygame
pygame.init()

# Constants
CELL_SIZE = 60
WIDTH, HEIGHT = 7 * CELL_SIZE, 7 * CELL_SIZE
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
BLUE = (0, 0, 255)
RED = (255, 0, 0)
LINE_COLOR = (150, 150, 150)
FONT_SIZE = 36

# Font
font = pygame.font.Font(None, FONT_SIZE)

# Create the screen
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("7x7 Tic-Tac-Toe")

def show(plate):
    for i in range(0, 43, 7):
        for j in range(1, 8):
            print(plate[i + j], end='\t')
        print()
plate = {}
for i in range(1, 50):
    plate[i] = i
show(plate)
# Function to draw the grid
def draw_grid():
    for i in range(1, 7):
        pygame.draw.line(screen, LINE_COLOR, (i * CELL_SIZE, 0), (i * CELL_SIZE, HEIGHT), 3)
        pygame.draw.line(screen, LINE_COLOR, (0, i * CELL_SIZE), (WIDTH, i * CELL_SIZE), 3)


# Function to draw the X and O on the board
def draw_board(board):
    for row in range(7):
        for col in range(7):
            cell_value = board[row * 7 + col + 1]
            if cell_value == 'X':
                pygame.draw.rect(screen, BLUE, (col * CELL_SIZE, row * CELL_SIZE, CELL_SIZE, CELL_SIZE))
            elif cell_value == 'O':
                pygame.draw.rect(screen, RED, (col * CELL_SIZE, row * CELL_SIZE, CELL_SIZE, CELL_SIZE))

            # Draw grid lines over the cells
            pygame.draw.rect(screen, LINE_COLOR, (col * CELL_SIZE, row * CELL_SIZE, CELL_SIZE, CELL_SIZE), 3)


win_list = {
    1: [[2,3,4,5], [8,15,22,29], [9,17,25,33]],
    2: [[1,3,4,5], [3,4,5,6], [9,16,23,30], [10,18,26,34]],
    3: [[1,2,4,5], [2,4,5,6], [4,5,6,7],[9,16,23,30], [11,19,27,35]],
    4: [[1,2,3,5], [2,3,5,6],[3,5,6,7], [11,18,25,32]],
    5: [[1,2,3,4], [2,3,4,6], [3,4,6,7], [12,19,26,33], [11,17,23,29]],
    6: [[2,3,4,5], [3,4,5,7], [13,20,27,34], [12,18,24,30]],
    7: [[3,4,5,6], [14,21,28,35], [13,19,25,31]],
    8: [[1,15,22,29], [15,22,29,36], [9,10,11,12], [16,24,32,40]],
    9: [[8,10,11,12], [10,11,12,13], [2,16,23,30], [16,23,30,37],[1,17,25,33], [17,25,33,41]],
    10: [[8,9,11,12], [9,11,12,13], [11,12,13,14], [3,17,24,31], [17,24,31,38], [2,18,26,34], [18,26,34,42]],
    11: [[8,9,10,12], [9,10,12,13], [10,12,13,14], [4,18,25,32], [18,25,32,39], [3,19,27,35], [5,17,23,29]],
    12: [[8,9,10,11], [9,10,11,13], [10,11,13,14], [5,19,26,33], [19,26,33,40], [6,18,24,30], [18,24,30,36]],
    13: [[9,10,11,12], [10,11,12,14], [6,20,27,34], [20,27,34,41], [7,19,25,31], [19,25,31,37]],
    14: [[10,11,12,13], [7,21,28,35], [21,28,35,42], [20,26,32,38]],
    15: [[16,17,18,19], [1,8,22,29], [8,22,29,36], [22,29,36,43], [23,31,39,47]],
    16: [[15,17,18,19], [17,18,19,20], [2,9,23,30], [9,23,30,37], [23,30,37,44], [8,24,32,40], [24,32,40,48]],
    17: [[15,16,18,19], [16,18,19,20], [18,19,20,21], [3,10,24,31], [10,24,31,38], [24,31,38,45], [1,9,25,33], [9,25,33,41], [25,33,41,49], [5,11,23,29]],
    18: [[15,16,17,19], [16,17,19,20], [17,19,20,21], [4,11,25,32], [11,25,32,39], [25,32,39,46], [2,10,26,34], [10,26,34,42], [6,12,24,30], [12,24,30,36]],
    19: [[15,16,17,18],[16,17,18,20], [17,18,20,21], [5,12,26,33], [12,26,33,40], [26,33,40,47],[3,11,27,35], [7,13,25,31], [13,25,31,37], [25,31,37,43]],
    20: [[16,17,18,19], [17,18,19,21], [6,13,27,34], [13,27,34,41],[27,34,41,48], [14,26,32,38], [26,32,38,44]],
    21: [[17,18,19,20], [7,14,28,35], [14,28,35,42], [28,35,42,49], [27,33,39,45]],
    22: [[23,24,25,26],[1,8,15,29], [8,15,29,36],[15,29,36,43]],
    23: [[22,24,25,26], [24,25,26,27], [2,9,16,30], [9,16,30,37], [16,30,37,44],[15,31,39,47], [5,11,17,29]],
    24: [[22,23,25,26], [23,25,26,27], [25,26,27,28], [3,10,17,31], [10,17,31,38], [17,31,38,45],[8,16,32,40], [16,32,40,48], [6,12,18,30], [12,18,30,36]],
    25: [[22,23,24,26], [23,24,26,27], [24,26,27,28],[4,11,18,32],[11,18,32,39], [18,32,39,46], [1,9,17,33], [9,17,33,41], [17,33,41,49],[7,13,19,31], [13,19,31,37], [19,31,37,43]],
    26: [[22,23,24,25], [23,24,25,27],[24,25,27,28], [5,12,19,33], [12,19,33,40], [19,33,40,47], [2,10,18,34],[10,18,34,42], [14,20,32,38], [20,32,38,44]],
    27: [[23,24,25,26], [24,25,26,28],[6,13,20,34], [13,20,34,41], [20,34,41,48],[3,11,19,35], [21,33,39,45]],
    28: [[24,25,26,27], [7,14,21,35], [14,21,35,42],[21,35,42,49]],
    29: [[30,31,32,33], [1,8,15,22], [8,15,22,36],[15,22,36,43], [5,11,17,23]],
    30: [[29,31,32,33], [31,32,33,34], [2,9,16,23], [9,16,23,37], [16,23,37,44], [6,12,18,24], [12,18,24,36]],
    31: [[29,30,32,33], [30,32,33,34], [32,33,34,35], [3,10,17,24], [10,17,24,38], [17,24,38,45], [15,23,39,47], [7,13,19,25], [13,19,25,37], [19,25,37,43]],
    32: [[29,30,31,33], [30,31,33,34],[31,33,34,35], [4,11,18,25], [11,18,25,39], [18,25,39,46], [8,16,24,40], [16,24,40,48], [14,20,26,38], [20,26,38,44]],
    33: [[29,30,31,32], [30,31,32,34], [31,32,34,35], [5,12,19,26], [12,19,26,40], [19,26,40,47], [1,9,17,25], [9,17,25,41], [17,25,41,49], [21,27,39,45]],
    34: [[30,31,32,33], [31,32,33,35], [6,13,20,27], [13,20,27,41], [20,27,41,48], [2,10,18,26], [10,18,26,42]],
    35: [[31,32,33,34], [7,14,21,28],[14,21,28,42], [21,28,42,49], [3,11,19,27]],
    36: [[37,38,39,40], [8,15,22,29], [15,22,29,43], [12,18,24,30]],
    37: [[36,38,39,40], [38,39,40,41], [9,16,23,30], [16,23,30,44], [13,19,25,31], [19,25,31,43]],
    38: [[36,37,39,40], [37,39,40,41], [39,40,41,42], [10,17,24,31], [17,24,31,45], [14,20,26,32], [20,26,32,44]],
    39: [[36,37,38,40], [37,38,40,41], [38,40,41,42], [11,18,25,32], [18,25,32,46], [15,23,31,47], [21,27,33,45]],
    40: [[36,37,38,39], [37,38,39,41], [38,39,41,42], [12,19,26,33], [19,26,33,47], [8,16,24,32], [16,24,32,48]],
    41: [[37,38,39,40], [38,39,40,42], [13,20,27,34], [20,27,34,48], [9,17,25,33], [17,25,33,49]],
    42: [[38,39,40,41], [14,21,28,35], [21,28,35,49], [10,18,26,34]],
    43: [[44,45,46,47], [15,22,29,36], [19,25,31,37]],
    44: [[43,45,46,47], [45,46,47,48], [16,23,30,37], [20,26,32,38]],
    45: [[43,44,46,47], [44,46,47,48], [46,47,48,49], [17,24,31,38], [21,27,33,39]],
    46: [[43,44,45,47], [44,45,47,48], [45,47,48,49], [18,25,32,39]],
    47: [[43,44,45,46], [44,45,46,48], [45,46,48,49], [19,26,33,40], [15,23,31,39]],
    48: [[44,45,46,47], [45,46,47,49], [20,27,34,41], [16,24,32,40]],
    49: [[45,46,47,48], [21,28,35,42], [17,25,33,41]],
}


def check_win(plate, position):
    for choice in win_list[position]:
        if plate[position] == plate[choice[0]] == plate[choice[1]] == plate[choice[2]] == plate[choice[3]]:
            return True
    return False


# Main game loop
def main():
    plate = {}
    for i in range(1, 50):
        plate[i] = i

    counter = 1

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

            if event.type == pygame.MOUSEBUTTONDOWN:
                mouseX, mouseY = pygame.mouse.get_pos()
                clicked_row = mouseY // CELL_SIZE
                clicked_col = mouseX // CELL_SIZE
                position = clicked_row * 7 + clicked_col + 1

                if 0 < position < 50 and plate[position] == position:
                    if counter % 2 == 1:
                        player_sign = 'X'
                    else:
                        player_sign = 'O'
                    plate[position] = player_sign
                    counter += 1

                    if check_win(plate, position):
                        winner = 'Blu' if player_sign == 'X' else 'Red'
                        print()
                        print('* ' * 23)
                        print('* ' * 23)
                        print('* ' * 5, '                        ', '* ' * 5)
                        print('* ' * 4, f' CONGRATULATION {winner} player! ', '* ' * 4)
                        print('* ' * 5, '                        ', '* ' * 5)
                        print('* ' * 23)
                        print('* ' * 23)
                        pygame.quit()
                        sys.exit()

                    if counter > 50:
                        print("Game has no winner")
                        pygame.quit()
                        sys.exit()

        screen.fill(WHITE)
        draw_grid()
        draw_board(plate)

        pygame.display.flip()


if __name__ == "__main__":
    main()
